akka.remote.netty.tcp {
	port = 0
}
radar {
	master {
		akka.remote.netty.tcp {
			hostname = "192.168.1.105"
			port = 10000
		}
	}
	slave1 {
		akka.remote.netty.tcp {
			hostname = "192.168.1.105"
			port = 10001
		}
	}
	slave2 {
		akka.remote.netty.tcp {
			hostname = "192.168.1.105"
			port = 10002
		}
	}
	slave3 {
		akka.remote.netty.tcp {
			hostname = "192.168.1.105"
			port = 10003
		}
	}
	slave4 {
		akka.remote.netty.tcp {
			hostname = "192.168.1.105"
			port = 10004
		}
	}
	slave5 {
		akka.remote.netty.tcp {
			hostname = "192.168.1.105"
			port = 10005
		}
	}
	slave6 {
		akka.remote.netty.tcp {
			hostname = "192.168.1.105"
			port = 10006
		}
	}
	slave7 {
		akka.remote.netty.tcp {
			hostname = "192.168.1.105"
			port = 10007
		}
	}
}
bdp {
	#获取组件安装根目录的命令
	rootpath-command = "echo /home/`whoami`/BDP/"
	mysql {
		driver = "com.mysql.jdbc.Driver"
		url = "jdbc:mysql://192.168.1.105:3306/bdp"
		user = "root"
		password = "asdfghjkl;'"
	}
	remote {
		agent.port = 18888
	}
	error {
		debug-mode = on
		templates {
			primary = "名为“{0}”的项已存在"
			duplicate = "{0}已存在"
			isNull = "{0}不能为空"
			notExist = "{0}不存在"
			notEmpty = "{0}非空，不能删除"
			truncation = "{0}过长"
			badChar = "{0}过长或包含不支持的字符"
			cantBind = "未能绑定{0}主机的{1}端口"
			noActor = "未能在{0}主机的{1}端口上找到{2}Actor"
			noAvroField = "缺少{0}字段"
			badAvroFormat = "{0}的JSON格式错误"
			noConfigItem = "JSON中缺少{0}项"
		}
		actors {
			com.cetc.remote.RunCommand = 执行Shell命令
		}
		columns {
			name_clu = 集群名称
			description_clu = 集群描述信息

			name_com = 组件名称
			edition_com = 组件版本
			description_com = 组件描述信息

			cluster_cc = 集群
			component_cc = 组件
			cluster_component_cc = 组件在该集群上

			cluster_cat = 集群
			name_cat = 分类名称
			description_cat = 分类描述

			category_alg = 分类
			name_alg = 算法名称
			iousage_alg = 输入输出数据格式说明

			framework_ver = 计算框架
			keyword_ver = 关键字
			executable_ver = 可执行文件路径
			source_ver = 源代码包路径
			dependency_ver = 算法的依赖包列表
			info_ver = 算法信息（描述、参数、样例、更新说明）

			cluster_dep = 集群
			language_dep = 编程语言
			name_dep = 依赖包名称

			cluster_uni = 集群
			framework_uni = 计算框架
			name_uni = 流程单元名称
			description_uni = 流程单元描述
			executable_uni = 流程单元可执行文件
			input_uni = 流程单元输入参数
			output_uni = 流程单元输出参数
			parameter_uni = 流程单元输出参数
		}
		avro {
			com.cetc {
				database {
					commons {
						StringList.this = 字符串列表
					}
					deployment {
						In_CreateCluster.this = 创建集群输入
						In_DeployComponent.this = 部署组件输入
					}
				}
			}
		}
	}
}